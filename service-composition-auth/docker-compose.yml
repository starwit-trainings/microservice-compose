name: service-composition-auth

services:
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: http://${HOST_IP}:8090/
    volumes:
      - ./microservices-realm.json:/opt/keycloak/data/import/realm.json
      - ./keycloak-volume:/mnt/volume
    command: ["start-dev", "--import-realm"]
    ports:
      - 8090:8080

  # This is a workaround for the Keycloak image not containing any tools suitable for health checking
  keycloak-healthchecker:
    build: ./healthchecker
    command: ["sleep", "9999999"]
    init: true
    healthcheck:
      test: curl --fail http://keycloak:8080/realms/microservices || exit 1
      interval: 1s
      retries: 20

  spring-boot-redirect:
    build: ./spring-boot-redirect
    ports:
      - 8080:8080
    environment:
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: http://${HOST_IP}:8090/realms/microservices
    depends_on:
      keycloak-healthchecker:
        condition: service_healthy

  nginx:
    image: nginx:1.27
    volumes:
      - ./nginx/html:/usr/share/nginx/html
    ports:
      - 8081:80

  spring-boot-resource-server:
    build: ./spring-boot-resource-server
    ports:
      - 8082:8081
    environment:
      IDENTIFICATION: backend-1
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://${HOST_IP}:8090/realms/microservices
    depends_on:
      keycloak-healthchecker:
        condition: service_healthy

  spring-boot-resource-server2:
    build: ./spring-boot-resource-server
    ports:
      - 8083:8081
    environment:
      IDENTIFICATION: backend-2
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://${HOST_IP}:8090/realms/microservices
    depends_on:
      keycloak-healthchecker:
        condition: service_healthy
    